.prism-cont {
  position: absolute;
  // centering
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  // perspective for cube
  perspective: 3000px;
}

@mixin prism($width, $depth, $height, $color) {
  $spacer: 0.25px; // extra spacing on z-axis

  transform-style: preserve-3d;
  width: $width;
  height: $height;
  display: block;
  transform-origin: 50% 50%;
  transition: transform 200ms linear;

  // shape container is the canvas
  .shape {
    position: absolute;
    width: $width;
    height: $height;
    transform-style: preserve-3d;
    transform-origin: 50% 50%;
    animation: flicker 100ms linear infinite,
      jiggle 100ms linear infinite;
  }

  // axis is the center point for sides (width, depth, height)
  .axis {
    position: absolute;
    transform-style: preserve-3d;
    transform-origin: 50% 50%;
    top: 0;
    bottom: 0;
    left: 50%;
    // pseudos are exploded from the center axis to make sides
    &::before, &::after {
      content: attr(title);
      position: absolute;
      display: block;
      border: 1px solid color(semi-trans-white);
      box-sizing: border-box;
    }
  }

  // width axis
  .width {
    transform: translateX(-50%);
    width: $width;
    // sides
    &::before, &::after {
      background: $color;
      width: $width;
      height: $height;
    }
    &::before {
      transform: translateZ($depth / 2 + $spacer);
    }
    &::after {
      transform: translateZ($depth / -2 + $spacer) rotateX(180deg) rotateZ(180deg);
    }
  }

  // depth axis
  .depth {
    transform: translateX(-50%) rotateY(90deg);
    width: $depth;
    // sides
    &::before, &::after {
      background: $color;
      width: $depth;
      height: $height;
    }
    &::before {
      transform: translateZ($width / 2 + $spacer);
    }
    &::after {
      transform: translateZ($width / -2 + $spacer) rotateY(180deg);
    }
  }

  // height axis
  .height {
    transform: translate(-50%,-50%) rotateX(90deg);
    width: $width;
    height: $depth;
    top: 50%;
    // sides
    &::before, &::after {
      background: $color;
      width: $width;
      height: $depth;
    }
    &::before {
      transform: translateZ($height / 2 + $spacer);
    }
    &::after {
      transform: translateZ($height / -2 + $spacer) rotateX(180deg);
    }
  }
}


// rotate
@keyframes rotate {
  0% {
    transform: rotateY(0deg) rotateX(0);
  }
  100% {
    transform: rotateY(-360deg) rotateX(-360deg);
  }
}

@keyframes flicker {
  from { opacity: 1; }
  to   { opacity: 0.7; }
}

@keyframes jiggle {
  0%, 100% { margin-left: 0; margin-top: 0; }
  25% { margin-left: -4px; margin-top: -3px; }
  75% { margin-left: 6px; margin-top: 5px; }
}